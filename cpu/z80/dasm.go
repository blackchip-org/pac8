// Code generated by cpu/z80/dasm/gen.go. DO NOT EDIT.

package z80

import "github.com/blackchip-org/pac8/cpu"

var dasm = map[uint8]func(cpu.Eval){
	0x00: func(e cpu.Eval) { op1(e, "nop", "") },
	0x01: func(e cpu.Eval) { op1(e, "ld", "bc", "&0000") },
	0x02: func(e cpu.Eval) { op1(e, "ld", "(bc)", "a") },
	0x03: func(e cpu.Eval) { op1(e, "inc", "bc") },
	0x04: func(e cpu.Eval) { op1(e, "inc", "b") },
	0x05: func(e cpu.Eval) { op1(e, "dec", "b") },
	0x06: func(e cpu.Eval) { op1(e, "ld", "b", "&00") },
	0x07: func(e cpu.Eval) { op1(e, "rlca", "") },
	0x08: func(e cpu.Eval) { op1(e, "ex", "af", "af'") },
	0x09: func(e cpu.Eval) { op1(e, "add", "hl", "bc") },
	0x0a: func(e cpu.Eval) { op1(e, "ld", "a", "(bc)") },
	0x0b: func(e cpu.Eval) { op1(e, "dec", "bc") },
	0x0c: func(e cpu.Eval) { op1(e, "inc", "c") },
	0x0d: func(e cpu.Eval) { op1(e, "dec", "c") },
	0x0e: func(e cpu.Eval) { op1(e, "ld", "c", "&00") },
	0x0f: func(e cpu.Eval) { op1(e, "rrca", "") },
	0x10: func(e cpu.Eval) { op1(e, "djnz", "&4546") },
	0x11: func(e cpu.Eval) { op1(e, "ld", "de", "&0000") },
	0x12: func(e cpu.Eval) { op1(e, "ld", "(de)", "a") },
	0x13: func(e cpu.Eval) { op1(e, "inc", "de") },
	0x14: func(e cpu.Eval) { op1(e, "inc", "d") },
	0x15: func(e cpu.Eval) { op1(e, "dec", "d") },
	0x16: func(e cpu.Eval) { op1(e, "ld", "d", "&00") },
	0x17: func(e cpu.Eval) { op1(e, "rla", "") },
	0x18: func(e cpu.Eval) { op1(e, "jr", "&4546") },
	0x19: func(e cpu.Eval) { op1(e, "add", "hl", "de") },
	0x1a: func(e cpu.Eval) { op1(e, "ld", "a", "(de)") },
	0x1b: func(e cpu.Eval) { op1(e, "dec", "de") },
	0x1c: func(e cpu.Eval) { op1(e, "inc", "e") },
	0x1d: func(e cpu.Eval) { op1(e, "dec", "e") },
	0x1e: func(e cpu.Eval) { op1(e, "ld", "e", "&00") },
	0x1f: func(e cpu.Eval) { op1(e, "rra", "") },
	0x20: func(e cpu.Eval) { op1(e, "jr", "nz", "&4546") },
	0x21: func(e cpu.Eval) { op1(e, "ld", "hl", "&0000") },
	0x22: func(e cpu.Eval) { op1(e, "ld", "(&0000)", "hl") },
	0x23: func(e cpu.Eval) { op1(e, "inc", "hl") },
	0x24: func(e cpu.Eval) { op1(e, "inc", "h") },
	0x25: func(e cpu.Eval) { op1(e, "dec", "h") },
	0x26: func(e cpu.Eval) { op1(e, "ld", "h", "&00") },
	0x27: func(e cpu.Eval) { op1(e, "daa", "") },
	0x28: func(e cpu.Eval) { op1(e, "jr", "z", "&4546") },
	0x29: func(e cpu.Eval) { op1(e, "add", "hl", "hl") },
	0x2a: func(e cpu.Eval) { op1(e, "ld", "hl", "(&0000)") },
	0x2b: func(e cpu.Eval) { op1(e, "dec", "hl") },
	0x2c: func(e cpu.Eval) { op1(e, "inc", "l") },
	0x2d: func(e cpu.Eval) { op1(e, "dec", "l") },
	0x2e: func(e cpu.Eval) { op1(e, "ld", "l", "&00") },
	0x2f: func(e cpu.Eval) { op1(e, "cpl", "") },
	0x30: func(e cpu.Eval) { op1(e, "jr", "nc", "&4546") },
	0x31: func(e cpu.Eval) { op1(e, "ld", "sp", "&0000") },
	0x32: func(e cpu.Eval) { op1(e, "ld", "(&0000)", "a") },
	0x33: func(e cpu.Eval) { op1(e, "inc", "sp") },
	0x34: func(e cpu.Eval) { op1(e, "inc", "(hl)") },
	0x35: func(e cpu.Eval) { op1(e, "dec", "(hl)") },
	0x36: func(e cpu.Eval) { op1(e, "ld", "(hl)", "&00") },
	0x37: func(e cpu.Eval) { op1(e, "scf", "") },
	0x38: func(e cpu.Eval) { op1(e, "jr", "c", "&4546") },
	0x39: func(e cpu.Eval) { op1(e, "add", "hl", "sp") },
	0x3a: func(e cpu.Eval) { op1(e, "ld", "a", "(&0000)") },
	0x3b: func(e cpu.Eval) { op1(e, "dec", "sp") },
	0x3c: func(e cpu.Eval) { op1(e, "inc", "a") },
	0x3d: func(e cpu.Eval) { op1(e, "dec", "a") },
	0x3e: func(e cpu.Eval) { op1(e, "ld", "a", "&00") },
	0x3f: func(e cpu.Eval) { op1(e, "ccf", "") },
	0x40: func(e cpu.Eval) { op1(e, "ld", "b", "b") },
	0x41: func(e cpu.Eval) { op1(e, "ld", "b", "c") },
	0x42: func(e cpu.Eval) { op1(e, "ld", "b", "d") },
	0x43: func(e cpu.Eval) { op1(e, "ld", "b", "e") },
	0x44: func(e cpu.Eval) { op1(e, "ld", "b", "h") },
	0x45: func(e cpu.Eval) { op1(e, "ld", "b", "l") },
	0x46: func(e cpu.Eval) { op1(e, "ld", "b", "(hl)") },
	0x47: func(e cpu.Eval) { op1(e, "ld", "b", "a") },
	0x48: func(e cpu.Eval) { op1(e, "ld", "c", "b") },
	0x49: func(e cpu.Eval) { op1(e, "ld", "c", "c") },
	0x4a: func(e cpu.Eval) { op1(e, "ld", "c", "d") },
	0x4b: func(e cpu.Eval) { op1(e, "ld", "c", "e") },
	0x4c: func(e cpu.Eval) { op1(e, "ld", "c", "h") },
	0x4d: func(e cpu.Eval) { op1(e, "ld", "c", "l") },
	0x4e: func(e cpu.Eval) { op1(e, "ld", "c", "(hl)") },
	0x4f: func(e cpu.Eval) { op1(e, "ld", "c", "a") },
	0x50: func(e cpu.Eval) { op1(e, "ld", "d", "b") },
	0x51: func(e cpu.Eval) { op1(e, "ld", "d", "c") },
	0x52: func(e cpu.Eval) { op1(e, "ld", "d", "d") },
	0x53: func(e cpu.Eval) { op1(e, "ld", "d", "e") },
	0x54: func(e cpu.Eval) { op1(e, "ld", "d", "h") },
	0x55: func(e cpu.Eval) { op1(e, "ld", "d", "l") },
	0x56: func(e cpu.Eval) { op1(e, "ld", "d", "(hl)") },
	0x57: func(e cpu.Eval) { op1(e, "ld", "d", "a") },
	0x58: func(e cpu.Eval) { op1(e, "ld", "e", "b") },
	0x59: func(e cpu.Eval) { op1(e, "ld", "e", "c") },
	0x5a: func(e cpu.Eval) { op1(e, "ld", "e", "d") },
	0x5b: func(e cpu.Eval) { op1(e, "ld", "e", "e") },
	0x5c: func(e cpu.Eval) { op1(e, "ld", "e", "h") },
	0x5d: func(e cpu.Eval) { op1(e, "ld", "e", "l") },
	0x5e: func(e cpu.Eval) { op1(e, "ld", "e", "(hl)") },
	0x5f: func(e cpu.Eval) { op1(e, "ld", "e", "a") },
	0x60: func(e cpu.Eval) { op1(e, "ld", "h", "b") },
	0x61: func(e cpu.Eval) { op1(e, "ld", "h", "c") },
	0x62: func(e cpu.Eval) { op1(e, "ld", "h", "d") },
	0x63: func(e cpu.Eval) { op1(e, "ld", "h", "e") },
	0x64: func(e cpu.Eval) { op1(e, "ld", "h", "h") },
	0x65: func(e cpu.Eval) { op1(e, "ld", "h", "l") },
	0x66: func(e cpu.Eval) { op1(e, "ld", "h", "(hl)") },
	0x67: func(e cpu.Eval) { op1(e, "ld", "h", "a") },
	0x68: func(e cpu.Eval) { op1(e, "ld", "l", "b") },
	0x69: func(e cpu.Eval) { op1(e, "ld", "l", "c") },
	0x6a: func(e cpu.Eval) { op1(e, "ld", "l", "d") },
	0x6b: func(e cpu.Eval) { op1(e, "ld", "l", "e") },
	0x6c: func(e cpu.Eval) { op1(e, "ld", "l", "h") },
	0x6d: func(e cpu.Eval) { op1(e, "ld", "l", "l") },
	0x6e: func(e cpu.Eval) { op1(e, "ld", "l", "(hl)") },
	0x6f: func(e cpu.Eval) { op1(e, "ld", "l", "a") },
	0x70: func(e cpu.Eval) { op1(e, "ld", "(hl)", "b") },
	0x71: func(e cpu.Eval) { op1(e, "ld", "(hl)", "c") },
	0x72: func(e cpu.Eval) { op1(e, "ld", "(hl)", "d") },
	0x73: func(e cpu.Eval) { op1(e, "ld", "(hl)", "e") },
	0x74: func(e cpu.Eval) { op1(e, "ld", "(hl)", "h") },
	0x75: func(e cpu.Eval) { op1(e, "ld", "(hl)", "l") },
	0x76: func(e cpu.Eval) { op1(e, "halt", "") },
	0x77: func(e cpu.Eval) { op1(e, "ld", "(hl)", "a") },
	0x78: func(e cpu.Eval) { op1(e, "ld", "a", "b") },
	0x79: func(e cpu.Eval) { op1(e, "ld", "a", "c") },
	0x7a: func(e cpu.Eval) { op1(e, "ld", "a", "d") },
	0x7b: func(e cpu.Eval) { op1(e, "ld", "a", "e") },
	0x7c: func(e cpu.Eval) { op1(e, "ld", "a", "h") },
	0x7d: func(e cpu.Eval) { op1(e, "ld", "a", "l") },
	0x7e: func(e cpu.Eval) { op1(e, "ld", "a", "(hl)") },
	0x7f: func(e cpu.Eval) { op1(e, "ld", "a", "a") },
	0x80: func(e cpu.Eval) { op1(e, "add", "a", "b") },
	0x81: func(e cpu.Eval) { op1(e, "add", "a", "c") },
	0x82: func(e cpu.Eval) { op1(e, "add", "a", "d") },
	0x83: func(e cpu.Eval) { op1(e, "add", "a", "e") },
	0x84: func(e cpu.Eval) { op1(e, "add", "a", "h") },
	0x85: func(e cpu.Eval) { op1(e, "add", "a", "l") },
	0x86: func(e cpu.Eval) { op1(e, "add", "a", "(hl)") },
	0x87: func(e cpu.Eval) { op1(e, "add", "a", "a") },
	0x88: func(e cpu.Eval) { op1(e, "adc", "a", "b") },
	0x89: func(e cpu.Eval) { op1(e, "adc", "a", "c") },
	0x8a: func(e cpu.Eval) { op1(e, "adc", "a", "d") },
	0x8b: func(e cpu.Eval) { op1(e, "adc", "a", "e") },
	0x8c: func(e cpu.Eval) { op1(e, "adc", "a", "h") },
	0x8d: func(e cpu.Eval) { op1(e, "adc", "a", "l") },
	0x8e: func(e cpu.Eval) { op1(e, "adc", "a", "(hl)") },
	0x8f: func(e cpu.Eval) { op1(e, "adc", "a", "a") },
	0x90: func(e cpu.Eval) { op1(e, "sub", "a", "b") },
	0x91: func(e cpu.Eval) { op1(e, "sub", "a", "c") },
	0x92: func(e cpu.Eval) { op1(e, "sub", "a", "d") },
	0x93: func(e cpu.Eval) { op1(e, "sub", "a", "e") },
	0x94: func(e cpu.Eval) { op1(e, "sub", "a", "h") },
	0x95: func(e cpu.Eval) { op1(e, "sub", "a", "l") },
	0x96: func(e cpu.Eval) { op1(e, "sub", "a", "(hl)") },
	0x97: func(e cpu.Eval) { op1(e, "sub", "a", "a") },
	0x98: func(e cpu.Eval) { op1(e, "sbc", "a", "b") },
	0x99: func(e cpu.Eval) { op1(e, "sbc", "a", "c") },
	0x9a: func(e cpu.Eval) { op1(e, "sbc", "a", "d") },
	0x9b: func(e cpu.Eval) { op1(e, "sbc", "a", "e") },
	0x9c: func(e cpu.Eval) { op1(e, "sbc", "a", "h") },
	0x9d: func(e cpu.Eval) { op1(e, "sbc", "a", "l") },
	0x9e: func(e cpu.Eval) { op1(e, "sbc", "a", "(hl)") },
	0x9f: func(e cpu.Eval) { op1(e, "sbc", "a", "a") },
	0xa0: func(e cpu.Eval) { op1(e, "and", "b") },
	0xa1: func(e cpu.Eval) { op1(e, "and", "c") },
	0xa2: func(e cpu.Eval) { op1(e, "and", "d") },
	0xa3: func(e cpu.Eval) { op1(e, "and", "e") },
	0xa4: func(e cpu.Eval) { op1(e, "and", "h") },
	0xa5: func(e cpu.Eval) { op1(e, "and", "l") },
	0xa6: func(e cpu.Eval) { op1(e, "and", "(hl)") },
	0xa7: func(e cpu.Eval) { op1(e, "and", "a") },
	0xa8: func(e cpu.Eval) { op1(e, "xor", "b") },
	0xa9: func(e cpu.Eval) { op1(e, "xor", "c") },
	0xaa: func(e cpu.Eval) { op1(e, "xor", "d") },
	0xab: func(e cpu.Eval) { op1(e, "xor", "e") },
	0xac: func(e cpu.Eval) { op1(e, "xor", "h") },
	0xad: func(e cpu.Eval) { op1(e, "xor", "l") },
	0xae: func(e cpu.Eval) { op1(e, "xor", "(hl)") },
	0xaf: func(e cpu.Eval) { op1(e, "xor", "a") },
	0xb0: func(e cpu.Eval) { op1(e, "or", "b") },
	0xb1: func(e cpu.Eval) { op1(e, "or", "c") },
	0xb2: func(e cpu.Eval) { op1(e, "or", "d") },
	0xb3: func(e cpu.Eval) { op1(e, "or", "e") },
	0xb4: func(e cpu.Eval) { op1(e, "or", "h") },
	0xb5: func(e cpu.Eval) { op1(e, "or", "l") },
	0xb6: func(e cpu.Eval) { op1(e, "or", "(hl)") },
	0xb7: func(e cpu.Eval) { op1(e, "or", "a") },
	0xb8: func(e cpu.Eval) { op1(e, "cp", "b") },
	0xb9: func(e cpu.Eval) { op1(e, "cp", "c") },
	0xba: func(e cpu.Eval) { op1(e, "cp", "d") },
	0xbb: func(e cpu.Eval) { op1(e, "cp", "e") },
	0xbc: func(e cpu.Eval) { op1(e, "cp", "h") },
	0xbd: func(e cpu.Eval) { op1(e, "cp", "l") },
	0xbe: func(e cpu.Eval) { op1(e, "cp", "(hl)") },
	0xbf: func(e cpu.Eval) { op1(e, "cp", "a") },
	0xc0: func(e cpu.Eval) { op1(e, "ret", "nz") },
	0xc1: func(e cpu.Eval) { op1(e, "pop", "bc") },
	0xc2: func(e cpu.Eval) { op1(e, "jp", "nz", "&0000") },
	0xc3: func(e cpu.Eval) { op1(e, "jp", "&0000") },
	0xc4: func(e cpu.Eval) { op1(e, "call", "nz", "&0000") },
	0xc5: func(e cpu.Eval) { op1(e, "push", "bc") },
	0xc6: func(e cpu.Eval) { op1(e, "add", "a", "&00") },
	0xc7: func(e cpu.Eval) { op1(e, "rst", "&00") },
	0xc8: func(e cpu.Eval) { op1(e, "ret", "z") },
	0xc9: func(e cpu.Eval) { op1(e, "ret", "") },
	0xca: func(e cpu.Eval) { op1(e, "jp", "z", "&0000") },
	0xcb: func(e cpu.Eval) { op1(e, "****", "cb ****") },
	0xcc: func(e cpu.Eval) { op1(e, "call", "z", "&0000") },
	0xcd: func(e cpu.Eval) { op1(e, "call", "&0000") },
	0xce: func(e cpu.Eval) { op1(e, "adc", "a", "&00") },
	0xcf: func(e cpu.Eval) { op1(e, "rst", "&08") },
	0xd0: func(e cpu.Eval) { op1(e, "ret", "nc") },
	0xd1: func(e cpu.Eval) { op1(e, "pop", "de") },
	0xd2: func(e cpu.Eval) { op1(e, "jp", "nc", "&0000") },
	0xd3: func(e cpu.Eval) { op1(e, "out", "(&00)", "a") },
	0xd4: func(e cpu.Eval) { op1(e, "call", "nc", "&0000") },
	0xd5: func(e cpu.Eval) { op1(e, "push", "de") },
	0xd6: func(e cpu.Eval) { op1(e, "sub", "a", "&00") },
	0xd7: func(e cpu.Eval) { op1(e, "rst", "&10") },
	0xd8: func(e cpu.Eval) { op1(e, "ret", "c") },
	0xd9: func(e cpu.Eval) { op1(e, "exx", "") },
	0xda: func(e cpu.Eval) { op1(e, "jp", "c", "&0000") },
	0xdb: func(e cpu.Eval) { op1(e, "in", "a", "(&00)") },
	0xdc: func(e cpu.Eval) { op1(e, "call", "c", "&0000") },
	0xdd: func(e cpu.Eval) { op1(e, "****", "dd ****") },
	0xde: func(e cpu.Eval) { op1(e, "sbc", "a", "&00") },
	0xdf: func(e cpu.Eval) { op1(e, "rst", "&18") },
	0xe0: func(e cpu.Eval) { op1(e, "ret", "po") },
	0xe1: func(e cpu.Eval) { op1(e, "pop", "hl") },
	0xe2: func(e cpu.Eval) { op1(e, "jp", "po", "&0000") },
	0xe3: func(e cpu.Eval) { op1(e, "ex", "(sp)", "hl") },
	0xe4: func(e cpu.Eval) { op1(e, "call", "po", "&0000") },
	0xe5: func(e cpu.Eval) { op1(e, "push", "hl") },
	0xe6: func(e cpu.Eval) { op1(e, "and", "&00") },
	0xe7: func(e cpu.Eval) { op1(e, "rst", "&20") },
	0xe8: func(e cpu.Eval) { op1(e, "ret", "pe") },
	0xe9: func(e cpu.Eval) { op1(e, "jp", "(hl)") },
	0xea: func(e cpu.Eval) { op1(e, "jp", "pe", "&0000") },
	0xeb: func(e cpu.Eval) { op1(e, "ex", "de", "hl") },
	0xec: func(e cpu.Eval) { op1(e, "call", "pe", "&0000") },
	0xed: func(e cpu.Eval) { op1(e, "****", "ed ****") },
	0xee: func(e cpu.Eval) { op1(e, "xor", "&00") },
	0xef: func(e cpu.Eval) { op1(e, "rst", "&28") },
	0xf0: func(e cpu.Eval) { op1(e, "ret", "p") },
	0xf1: func(e cpu.Eval) { op1(e, "pop", "af") },
	0xf2: func(e cpu.Eval) { op1(e, "jp", "p", "&0000") },
	0xf3: func(e cpu.Eval) { op1(e, "di", "") },
	0xf4: func(e cpu.Eval) { op1(e, "call", "p", "&0000") },
	0xf5: func(e cpu.Eval) { op1(e, "push", "af") },
	0xf6: func(e cpu.Eval) { op1(e, "or", "&00") },
	0xf7: func(e cpu.Eval) { op1(e, "rst", "&30") },
	0xf8: func(e cpu.Eval) { op1(e, "ret", "m") },
	0xf9: func(e cpu.Eval) { op1(e, "ld", "sp", "hl") },
	0xfa: func(e cpu.Eval) { op1(e, "jp", "m", "&0000") },
	0xfb: func(e cpu.Eval) { op1(e, "ei", "") },
	0xfc: func(e cpu.Eval) { op1(e, "call", "m", "&0000") },
	0xfd: func(e cpu.Eval) { op1(e, "****", "fd ****") },
	0xfe: func(e cpu.Eval) { op1(e, "cp", "&00") },
	0xff: func(e cpu.Eval) { op1(e, "rst", "&38") },
}
